services:
  tts-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: kokoro-tts-service:latest
    container_name: kokoro-tts-service-${COMPOSE_PROJECT_NAME:-default}
    ports:
      - "8880:8880"
    environment:
      - PYTHONUNBUFFERED=1
      - G2P_SERVICE_URL=http://g2p-service:5000
      - G2P_TIMEOUT=30
      - MAX_BATCH_SIZE=50
      - MAX_TOKENS_PER_CHUNK=400
      - MIN_TOKENS_PER_CHUNK=100
      - FIRST_CHUNK_MAX_TOKENS=50
      - FIRST_CHUNK_MIN_TOKENS=25
      - HOST=0.0.0.0
      - PORT=8880
    volumes:
      # Mount Kokoro models directory (adjust path as needed)
      - ./models:/app/models:ro
      # Optional: Mount output directory for generated audio
      - ./output:/app/output
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8880/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - g2p-service
    labels:
      - "com.kokoro.service=tts"
      - "com.kokoro.license=GPL-free"
      - "com.kokoro.description=License-safe TTS service for Kokoro"

  # G2P service dependency (can be external or included)
  g2p-service:
    image: kokoro-g2p-service:latest
    container_name: kokoro-g2p-service-${COMPOSE_PROJECT_NAME:-default}
    ports:
      - "5000:5000"
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.kokoro.service=g2p"
      - "com.kokoro.license=GPL-isolated"

networks:
  default:
    name: kokoro-network-${COMPOSE_PROJECT_NAME:-default}

volumes:
  kokoro-models:
    driver: local